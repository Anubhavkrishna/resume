# Define the URL of the AKS supported Kubernetes versions page
$url = "https://learn.microsoft.com/en-us/azure/aks/supported-kubernetes-versions?tabs=azure-cli"

# Send a request to the URL and parse the HTML content
$response = Invoke-WebRequest -Uri $url

# Check if the request was successful (status code 200)
if ($response.StatusCode -eq 200) {
    # Extract all tables from the HTML content
    $tables = $response.ParsedHtml.getElementsByTagName('table')

    # Iterate through each table to find the Kubernetes versions table
    foreach ($table in $tables) {
        # Check if the table contains rows and headers
        if ($table.Rows.Count -gt 0 -and $table.Rows[0].Cells.Count -gt 1) {
            $headerRow = $table.Rows[0]
            
            # Check if the table header matches the Kubernetes versions table
            if ($headerRow.Cells[0].InnerText -match "Kubernetes version" -and $headerRow.Cells[1].InnerText -match "End of support") {
                # Output the Kubernetes versions and end-of-life information
                Write-Host "Kubernetes Versions and End-of-Life Information:"
                for ($i = 1; $i -lt $table.Rows.Count; $i++) {
                    $row = $table.Rows[$i]
                    $k8sVersion = $row.Cells[0].InnerText.Trim()
                    $endOfLife = $row.Cells[1].InnerText.Trim()
                    Write-Host "$k8sVersion - $endOfLife"
                }
                break  # Exit the loop after finding the Kubernetes versions table
            }
        }
    }
} else {
    Write-Host "Failed to retrieve data from $url (Status code: $($response.StatusCode))"
}
